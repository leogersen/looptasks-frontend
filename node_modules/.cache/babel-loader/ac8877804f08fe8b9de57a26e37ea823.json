{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Documents\\\\workspace\\\\looptasks-frontend\\\\src\\\\components\\\\TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Alert from './Alert';\nimport { AuthContext } from '../hooks/useAuth';\nimport { useTasks } from '../hooks/useTasks';\n\nconst TaskForm = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const tasks = useTasks();\n  const [task, setTask] = useState({\n    id: 0,\n    description: \"\",\n    whenToDo: \"\"\n  });\n  const [redirect, setRedirect] = useState(false);\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    tasks.save(task);\n  };\n\n  const onInputChangeHandler = event => {\n    const field = event.target.name;\n    const value = event.target.value;\n    setTask({ ...task,\n      [field]: value\n    });\n  };\n\n  if (!auth.isAuthenticated()) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this);\n  }\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro da Tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), tasks.error && /*#__PURE__*/_jsxDEV(Alert, {\n      message: this.state.alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Descri\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"description\",\n          value: task.description,\n          placeholder: \"Digite a descri\\xE7\\xE3o\",\n          onChange: onInputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"whenToDo\",\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          name: \"whenToDo\",\n          value: task.whenToDo,\n          placeholder: \"Informe a data\",\n          onChange: onInputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: tasks.processing,\n        children: tasks.processing ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner-border spinner-border-sm\",\n          role: \"status\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this) : task.id === 0 ? \"Gravar\" : \"Alterar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: () => setRedirect(true),\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n\n_s(TaskForm, \"xbhir9mJdKD2FvAtVmStn3c3bQs=\", false, function () {\n  return [useTasks];\n});\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/looptasks-frontend/src/components/TaskForm.js"],"names":["React","useContext","useState","Redirect","Alert","AuthContext","useTasks","TaskForm","auth","tasks","task","setTask","id","description","whenToDo","redirect","setRedirect","onSubmitHandler","event","preventDefault","save","onInputChangeHandler","field","target","name","value","isAuthenticated","error","state","alert","processing"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport { AuthContext } from '../hooks/useAuth';\r\nimport { useTasks } from '../hooks/useTasks';\r\n\r\nconst TaskForm = () => {\r\n    const auth = useContext(AuthContext);\r\n    const tasks = useTasks();\r\n    const [task, setTask ] = useState({ id: 0, description: \"\", whenToDo: \"\" });\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        tasks.save(task);\r\n\r\n    }\r\n\r\n    const onInputChangeHandler = (event) => {\r\n        const field = event.target.name;\r\n        const value = event.target.value;\r\n        setTask({...task, [field]: value})\r\n    }\r\n\r\n\r\n        if (!auth.isAuthenticated()) {\r\n            return <Redirect to=\"/login\" />;\r\n\r\n        }\r\n\r\n        if (redirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Cadastro da Tarefa</h1>\r\n                {tasks.error && <Alert message={this.state.alert} />}\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"description\">Descrição</label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"description\"\r\n                            value={task.description}\r\n                            placeholder=\"Digite a descrição\"\r\n                            onChange={onInputChangeHandler} />\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"whenToDo\">Data</label>\r\n                        <input type=\"date\"\r\n                            className=\"form-control\"\r\n                            name=\"whenToDo\"\r\n                            value={task.whenToDo}\r\n                            placeholder=\"Informe a data\"\r\n                            onChange={onInputChangeHandler} />\r\n                    </div>\r\n                    <br />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={tasks.processing}>\r\n\r\n                        {\r\n                            tasks.processing ?\r\n                            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n\r\n                                : task.id === 0 ? \"Gravar\" : \"Alterar\"\r\n\r\n                        }\r\n\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => setRedirect(true)}>\r\n                        Cancelar\r\n                        </button>\r\n                </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default TaskForm;"]},"metadata":{},"sourceType":"module"}