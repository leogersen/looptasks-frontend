{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Documents\\\\workspace\\\\loop-frontend\\\\src\\\\components\\\\TaskListTable.js\";\nimport React, { Component } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport TaskService from '../api/TaskService';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Redirect } from 'react-router-dom';\nimport Alert from './Alert';\n\nclass TaskListTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    };\n    this.onDeleteHandler = this.onDeleteHandler.bind(this);\n    this.onStatusChangeHandler = this.onStatusChangeHandler.bind(this);\n    this.onEditHandler = this.onEditHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.listTasks();\n  }\n\n  listTasks() {\n    this.setState({\n      tasks: TaskService.list()\n    });\n  }\n\n  onDeleteHandler(id) {\n    if (window.confirm(\"Deseja mesmo excluir essa tarefa?\")) TaskService.delete(id);\n    this.listTasks();\n    toast.success(\"Tarefa excluÃ­da!\", {\n      position: toast.POSITION.BOTTOM_LEFT\n    });\n  }\n\n  onEditHandler(id) {\n    this.setState({\n      editId: id\n    });\n  }\n\n  onStatusChangeHandler(task) {\n    task.done = !task.done;\n    TaskService.save(task);\n    this.listTasks();\n  }\n\n  render() {\n    if (this.state.editId > 0) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/form/${this.state.editId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        message: \"Este \\xE9 um alerta de testes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), this.state.tasks.length > 0 ? /*#__PURE__*/_jsxDEV(TableBody, {\n          tasks: this.state.tasks,\n          onDelete: this.onDeleteHandler,\n          onEdit: this.onEditHandler,\n          onStatusChange: this.onStatusChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(EmptyTableBody, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 1500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst TableHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    className: \"table-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        children: \"Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        children: \"A\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TableHeader;\n\nconst TableBody = props => {\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: props.tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: () => props.onStatusChange(task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: task.done ? /*#__PURE__*/_jsxDEV(\"s\", {\n          children: [\" \", task.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 39\n        }, this) : task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: task.done ? /*#__PURE__*/_jsxDEV(\"s\", {\n          children: [\" \", task.whenToDo, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 39\n        }, this) : task.whenToDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          value: \"Editar\",\n          onClick: () => props.onEdit(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-danger\",\n          type: \"button\",\n          value: \"Excluir\",\n          onClick: () => props.onDelete(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = TableBody;\n\nconst EmptyTableBody = props => {\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: \"4\",\n        children: \"Sem tarefas cadastradas no momento!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = EmptyTableBody;\nexport default TaskListTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TableHeader\");\n$RefreshReg$(_c2, \"TableBody\");\n$RefreshReg$(_c3, \"EmptyTableBody\");","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/loop-frontend/src/components/TaskListTable.js"],"names":["React","Component","toast","ToastContainer","TaskService","Redirect","Alert","TaskListTable","constructor","props","state","tasks","onDeleteHandler","bind","onStatusChangeHandler","onEditHandler","componentDidMount","listTasks","setState","list","id","window","confirm","delete","success","position","POSITION","BOTTOM_LEFT","editId","task","done","save","render","length","TableHeader","TableBody","map","onStatusChange","description","whenToDo","onEdit","onDelete","EmptyTableBody"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport TaskService from '../api/TaskService';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Alert from './Alert';\r\n\r\nclass TaskListTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            tasks: []\r\n        }\r\n\r\n        this.onDeleteHandler = this.onDeleteHandler.bind(this);\r\n        this.onStatusChangeHandler = this.onStatusChangeHandler.bind(this);\r\n        this.onEditHandler = this.onEditHandler.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.listTasks();\r\n\r\n    }\r\n\r\n    listTasks() {\r\n        this.setState({ tasks: TaskService.list() });\r\n    }\r\n\r\n    onDeleteHandler(id) {\r\n        if (window.confirm(\"Deseja mesmo excluir essa tarefa?\"))\r\n            TaskService.delete(id);\r\n        this.listTasks();\r\n        toast.success(\"Tarefa excluÃ­da!\", { position: toast.POSITION.BOTTOM_LEFT });\r\n    }\r\n\r\n    onEditHandler(id) {\r\n        this.setState({ editId: id });\r\n    }\r\n\r\n    onStatusChangeHandler(task) {\r\n            task.done = !task.done;\r\n            TaskService.save(task);\r\n            this.listTasks();\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.editId > 0){\r\n            return <Redirect to={`/form/${this.state.editId}`} />\r\n        } \r\n\r\n        return (\r\n            <div>\r\n\r\n                <Alert message=\"Este Ã© um alerta de testes\"/>\r\n                <table className=\"table table-striped\">\r\n                    <TableHeader />\r\n                   {this.state.tasks.length > 0 ?<TableBody\r\n                        tasks={this.state.tasks}\r\n                        onDelete={this.onDeleteHandler} \r\n                        onEdit={this.onEditHandler}\r\n                        onStatusChange={this.onStatusChangeHandler}\r\n                        />\r\n                    :\r\n                    <EmptyTableBody />\r\n                    \r\n                    }\r\n\r\n\r\n                </table>\r\n                <ToastContainer autoClose={1500} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead className=\"table-dark\">\r\n            <tr>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">DescriÃ§Ã£o</th>\r\n                <th scope=\"col\">Data</th>\r\n                <th scope=\"col\">AÃ§Ãµes</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    return (\r\n        <tbody>\r\n            {props.tasks.map(task =>\r\n                <tr key={task.id}>\r\n                    <td><input \r\n                        type=\"checkbox\" \r\n                        checked={task.done} \r\n                        onChange={() => props.onStatusChange(task)}\r\n                        /> </td>\r\n                    <td>{ task.done ? <s> {task.description} </s> : task.description }</td>\r\n                    <td>{ task.done ? <s> {task.whenToDo} </s> : task.whenToDo }</td>\r\n                    <td>\r\n                        <input \r\n                        className=\"btn btn-primary\" \r\n                        type=\"button\" \r\n                        value=\"Editar\"\r\n                        onClick={() => props.onEdit(task.id)} />\r\n                        &nbsp;<input\r\n                            className=\"btn btn-danger\"\r\n                            type=\"button\"\r\n                            value=\"Excluir\"\r\n                            onClick={() => props.onDelete(task.id)} />\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </tbody>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst EmptyTableBody = (props) => {\r\n    return (\r\n\r\n    <tbody>\r\n        <tr>\r\n           <td colSpan=\"4\">Sem tarefas cadastradas no momento!</td> \r\n        </tr>\r\n\r\n    </tbody>)\r\n}\r\n\r\nexport default TaskListTable;"]},"metadata":{},"sourceType":"module"}