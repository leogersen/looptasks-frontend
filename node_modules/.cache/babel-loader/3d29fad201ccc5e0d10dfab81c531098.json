{"ast":null,"code":"class TaskService {\n  constructor() {\n    this.tasks = [{\n      id: 1,\n      description: \"Tarefa 1\",\n      whenTodo: \"01/01/2030\",\n      done: false\n    }, {\n      id: 2,\n      description: \"Tarefa 2\",\n      whenTodo: \"02/01/2030\",\n      done: false\n    }, {\n      id: 3,\n      description: \"Tarefa 3\",\n      whenTodo: \"03/01/2030\",\n      done: false\n    }];\n  }\n\n  list() {\n    return this.tasks;\n  }\n\n  delete(id) {\n    this.tasks = this.tasks.filter(task => task.id !== id);\n  }\n\n  save(task) {\n    if (task.id !== 0) {\n      this.tasks.map(t => task.id !== t.id ? t : task);\n    } else {\n      const taskId = Math.max(...this.tasks.map(t => t.id)) + 1;\n      task.id = taskId;\n      this.tasks.push(task);\n      console.log(task);\n    }\n  }\n\n}\n\nexport default new TaskService();","map":{"version":3,"sources":["C:/Users/leoge/workspace/loop-frontend/src/api/TaskService.js"],"names":["TaskService","constructor","tasks","id","description","whenTodo","done","list","delete","filter","task","save","map","t","taskId","Math","max","push","console","log"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AACdC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,CACT;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,UAAtB;AAAkCC,MAAAA,QAAQ,EAAE,YAA5C;AAA0DC,MAAAA,IAAI,EAAE;AAAhE,KADS,EAET;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,UAAtB;AAAkCC,MAAAA,QAAQ,EAAE,YAA5C;AAA0DC,MAAAA,IAAI,EAAE;AAAhE,KAFS,EAGT;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,UAAtB;AAAkCC,MAAAA,QAAQ,EAAE,YAA5C;AAA0DC,MAAAA,IAAI,EAAE;AAAhE,KAHS,CAAb;AAMH;;AAEDC,EAAAA,IAAI,GAAG;AACH,WAAO,KAAKL,KAAZ;AAEH;;AACDM,EAAAA,MAAM,CAACL,EAAD,EAAK;AACP,SAAKD,KAAL,GAAa,KAAKA,KAAL,CAAWO,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAtC,CAAb;AACH;;AAEDQ,EAAAA,IAAI,CAACD,IAAD,EAAO;AACP,QAAIA,IAAI,CAACP,EAAL,KAAY,CAAhB,EAAmB;AACf,WAAKD,KAAL,CAAWU,GAAX,CAAeC,CAAC,IAAIH,IAAI,CAACP,EAAL,KAAYU,CAAC,CAACV,EAAd,GAAmBU,CAAnB,GAAuBH,IAA3C;AACH,KAFD,MAEO;AACJ,YAAMI,MAAM,GAAIC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAKd,KAAL,CAAWU,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACV,EAAtB,CAAZ,IAAyC,CAAzD;AACAO,MAAAA,IAAI,CAACP,EAAL,GAAUW,MAAV;AACA,WAAKZ,KAAL,CAAWe,IAAX,CAAgBP,IAAhB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEF;AACJ;;AA5Ba;;AA8BlB,eAAe,IAAIV,WAAJ,EAAf","sourcesContent":["class TaskService {\r\n    constructor() {\r\n        this.tasks = [\r\n            { id: 1, description: \"Tarefa 1\", whenTodo: \"01/01/2030\", done: false },\r\n            { id: 2, description: \"Tarefa 2\", whenTodo: \"02/01/2030\", done: false },\r\n            { id: 3, description: \"Tarefa 3\", whenTodo: \"03/01/2030\", done: false }\r\n        ]\r\n\r\n    }\r\n\r\n    list() {\r\n        return this.tasks;\r\n\r\n    }\r\n    delete(id) {\r\n        this.tasks = this.tasks.filter(task => task.id !== id);\r\n    }\r\n\r\n    save(task) {\r\n        if (task.id !== 0) {\r\n            this.tasks.map(t => task.id !== t.id ? t : task);\r\n        } else {\r\n           const taskId =  Math.max(...this.tasks.map(t => t.id)) + 1;\r\n           task.id = taskId;\r\n           this.tasks.push(task);\r\n           console.log(task);\r\n\r\n        }\r\n    }\r\n}\r\nexport default new TaskService();"]},"metadata":{},"sourceType":"module"}