{"ast":null,"code":"import axios from \"axios\";\nimport { API_ENDPOINT } from \"../constants\";\nimport AuthService from \"./AuthService\";\n\nclass TaskService {\n  list(onFetch, onError) {\n    axios.get(`${API_ENDPOINT}/tasks?sort=whenToDO,asc`, this.buildAuthHeader()).then(response => onFetch(response.data.content)).catch(e => onError(e));\n  }\n\n  load(id) {\n    return this.tasks.filter(t => t.id === id)[0];\n  }\n\n  delete(id) {\n    this.tasks = this.tasks.filter(task => task.id !== id);\n  }\n\n  save(task) {\n    if (task.id !== 0) {\n      this.tasks = this.tasks.map(t => task.id !== t.id ? t : task);\n    } else {\n      const taskId = Math.max(...this.tasks.map(t => t.id)) + 1;\n      task.id = taskId;\n      this.tasks.push(task);\n    }\n  }\n\n  buildAuthHeader() {\n    return {\n      headers: {\n        'Authorization': `Bearer ${AuthService.getJWTToken()}`\n      }\n    };\n  }\n\n}\n\nexport default new TaskService();","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/loop-frontend/src/api/TaskService.js"],"names":["axios","API_ENDPOINT","AuthService","TaskService","list","onFetch","onError","get","buildAuthHeader","then","response","data","content","catch","e","load","id","tasks","filter","t","delete","task","save","map","taskId","Math","max","push","headers","getJWTToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,WAAN,CAAkB;AAGdC,EAAAA,IAAI,CAACC,OAAD,EAAUC,OAAV,EAAmB;AACnBN,IAAAA,KAAK,CACJO,GADD,CACM,GAAEN,YAAa,0BADrB,EACgD,KAAKO,eAAL,EADhD,EAECC,IAFD,CAEMC,QAAQ,IAAIL,OAAO,CAACK,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAFzB,EAGCC,KAHD,CAGOC,CAAC,IAAIR,OAAO,CAACQ,CAAD,CAHnB;AAKH;;AAEDC,EAAAA,IAAI,CAACC,EAAD,EAAK;AACL,WAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAAQA,EAA/B,EAAmC,CAAnC,CAAP;AACH;;AAEDI,EAAAA,MAAM,CAACJ,EAAD,EAAK;AACP,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,MAAX,CAAkBG,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAtC,CAAb;AACH;;AAEDM,EAAAA,IAAI,CAACD,IAAD,EAAO;AACP,QAAIA,IAAI,CAACL,EAAL,KAAY,CAAhB,EAAmB;AACf,WAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWM,GAAX,CAAeJ,CAAC,IAAIE,IAAI,CAACL,EAAL,KAAYG,CAAC,CAACH,EAAd,GAAmBG,CAAnB,GAAuBE,IAA3C,CAAb;AACH,KAFD,MAEO;AACJ,YAAMG,MAAM,GAAIC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAKT,KAAL,CAAWM,GAAX,CAAeJ,CAAC,IAAIA,CAAC,CAACH,EAAtB,CAAZ,IAAyC,CAAzD;AACAK,MAAAA,IAAI,CAACL,EAAL,GAAUQ,MAAV;AACA,WAAKP,KAAL,CAAWU,IAAX,CAAgBN,IAAhB;AAEF;AACJ;;AAEDb,EAAAA,eAAe,GAAG;AACd,WAAO;AACHoB,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAAS1B,WAAW,CAAC2B,WAAZ,EAA0B;AADhD;AADN,KAAP;AAKH;;AApCa;;AAuClB,eAAe,IAAI1B,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\nimport { API_ENDPOINT } from \"../constants\";\r\nimport AuthService from \"./AuthService\";\r\n\r\nclass TaskService {\r\n   \r\n\r\n    list(onFetch, onError) {\r\n        axios\r\n        .get(`${API_ENDPOINT}/tasks?sort=whenToDO,asc`, this.buildAuthHeader())\r\n        .then(response => onFetch(response.data.content))\r\n        .catch(e => onError(e));\r\n\r\n    }\r\n\r\n    load(id) {\r\n        return this.tasks.filter(t => t.id ===id)[0];\r\n    }\r\n\r\n    delete(id) {\r\n        this.tasks = this.tasks.filter(task => task.id !== id);\r\n    }\r\n\r\n    save(task) {\r\n        if (task.id !== 0) {\r\n            this.tasks = this.tasks.map(t => task.id !== t.id ? t : task);\r\n        } else {\r\n           const taskId =  Math.max(...this.tasks.map(t => t.id)) + 1;\r\n           task.id = taskId;\r\n           this.tasks.push(task);\r\n\r\n        }\r\n    }\r\n    \r\n    buildAuthHeader() {\r\n        return {\r\n            headers: {\r\n                'Authorization': `Bearer ${AuthService.getJWTToken()}`\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport default new TaskService();"]},"metadata":{},"sourceType":"module"}