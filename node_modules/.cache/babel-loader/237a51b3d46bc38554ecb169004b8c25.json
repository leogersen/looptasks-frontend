{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Documents\\\\workspace\\\\loop-frontend\\\\src\\\\components\\\\TaskListTable.js\";\nimport React, { Component } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport TaskService from '../api/TaskService';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Redirect } from 'react-router-dom';\nimport Alert from './Alert';\nimport AuthService from '../api/AuthService';\nimport Spinner from './Spinner';\nimport Moment from 'react-moment';\n\nclass TaskListTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      editId: 0,\n      loading: false,\n      alert: null\n    };\n    this.onDeleteHandler = this.onDeleteHandler.bind(this);\n    this.onStatusChangeHandler = this.onStatusChangeHandler.bind(this);\n    this.onEditHandler = this.onEditHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.listTasks();\n  }\n\n  listTasks() {\n    if (!AuthService.isAuthenticated()) {\n      return;\n    }\n\n    this.setState({\n      loading: true\n    });\n    TaskService.list(tasks => this.setState({\n      tasks: tasks,\n      loading: false\n    }), error => this.setErrorState(error));\n  }\n\n  setErrorState(error) {\n    this.setState({\n      alert: `Erro na requisição:  ${error.message}`,\n      loading: false\n    });\n  }\n\n  onDeleteHandler(id) {\n    if (window.confirm(\"Deseja mesmo excluir essa tarefa?\")) TaskService.delete(id, () => {\n      this.listTasks();\n      toast.success(\"Tarefa excluída!\", {\n        position: toast.POSITION.BOTTOM_LEFT\n      });\n    }, error => this.setErrorState(error));\n  }\n\n  onEditHandler(id) {\n    this.setState({\n      editId: id\n    });\n  }\n\n  onStatusChangeHandler(task) {\n    task.done = !task.done;\n    TaskService.save(task, () => this.listTasks(), error => this.setErrorState(error));\n  }\n\n  render() {\n    if (!AuthService.isAuthenticated()) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.editId > 0) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/form/${this.state.editId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lista de Tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), this.state.alert != null ? /*#__PURE__*/_jsxDEV(Alert, {\n        message: this.state.alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }, this) : \"\", this.state.loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(TableHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), this.state.tasks.length > 0 ? /*#__PURE__*/_jsxDEV(TableBody, {\n          tasks: this.state.tasks,\n          onDelete: this.onDeleteHandler,\n          onEdit: this.onEditHandler,\n          onStatusChange: this.onStatusChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(EmptyTableBody, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 1500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst TableHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    className: \"table-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        children: \"Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"col\",\n        children: \"A\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TableHeader;\n\nconst TableBody = props => {\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: props.tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.done,\n          onChange: () => props.onStatusChange(task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: task.done ? /*#__PURE__*/_jsxDEV(\"s\", {\n          children: [\" \", task.description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 39\n        }, this) : task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: task.done ? /*#__PURE__*/_jsxDEV(\"s\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"DD/MM/YYYY\",\n            children: task.whenToDo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 43\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"DD/MM/YYYY\",\n          children: task.whenToDo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          value: \"Editar\",\n          onClick: () => props.onEdit(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-danger\",\n          type: \"button\",\n          value: \"Excluir\",\n          onClick: () => props.onDelete(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = TableBody;\n\nconst EmptyTableBody = props => {\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: \"4\",\n        children: \"Sem tarefas cadastradas no momento!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = EmptyTableBody;\nexport default TaskListTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TableHeader\");\n$RefreshReg$(_c2, \"TableBody\");\n$RefreshReg$(_c3, \"EmptyTableBody\");","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/loop-frontend/src/components/TaskListTable.js"],"names":["React","Component","toast","ToastContainer","TaskService","Redirect","Alert","AuthService","Spinner","Moment","TaskListTable","constructor","props","state","tasks","editId","loading","alert","onDeleteHandler","bind","onStatusChangeHandler","onEditHandler","componentDidMount","listTasks","isAuthenticated","setState","list","error","setErrorState","message","id","window","confirm","delete","success","position","POSITION","BOTTOM_LEFT","task","done","save","render","length","TableHeader","TableBody","map","onStatusChange","description","whenToDo","onEdit","onDelete","EmptyTableBody"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport TaskService from '../api/TaskService';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport AuthService from '../api/AuthService';\r\nimport Spinner from './Spinner';\r\nimport Moment from 'react-moment';\r\n\r\nclass TaskListTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            editId: 0,\r\n            loading: false,\r\n            alert: null\r\n\r\n        }\r\n\r\n        this.onDeleteHandler = this.onDeleteHandler.bind(this);\r\n        this.onStatusChangeHandler = this.onStatusChangeHandler.bind(this);\r\n        this.onEditHandler = this.onEditHandler.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.listTasks();\r\n\r\n    }\r\n\r\n    listTasks() {\r\n        if (!AuthService.isAuthenticated()) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ loading: true });\r\n        TaskService.list(\r\n            tasks => this.setState({tasks : tasks, loading: false}),\r\n            error => this.setErrorState(error)\r\n        );\r\n    }\r\n\r\n    setErrorState(error) {\r\n        this.setState({alert: `Erro na requisição:  ${error.message}`, loading: false})\r\n    }\r\n\r\n    onDeleteHandler(id) {\r\n        if (window.confirm(\"Deseja mesmo excluir essa tarefa?\"))\r\n\r\n        TaskService.delete(id,\r\n            () => {\r\n            this.listTasks();\r\n            toast.success(\"Tarefa excluída!\", { position: toast.POSITION.BOTTOM_LEFT });\r\n            },\r\n            error => this.setErrorState(error));\r\n\r\n     \r\n    }\r\n\r\n    onEditHandler(id) {\r\n        this.setState({ editId: id });\r\n    }\r\n\r\n    onStatusChangeHandler(task) {\r\n            task.done = !task.done;\r\n\r\n            TaskService.save(task, () => this.listTasks(),\r\n            (error => this.setErrorState(error)));\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (!AuthService.isAuthenticated()) {\r\n            return <Redirect to=\"/login\" />;\r\n            \r\n        }\r\n\r\n        if (this.state.editId > 0){\r\n            return <Redirect to={`/form/${this.state.editId}`} />\r\n        } \r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>Lista de Tarefas</h1>\r\n                {this.state.alert != null ? <Alert message={this.state.alert} /> : \"\"}\r\n                {this.state.loading ? <Spinner/> :\r\n                <table className=\"table table-striped\">\r\n                    <TableHeader />\r\n                   {this.state.tasks.length > 0 ? <TableBody\r\n                        tasks={this.state.tasks}\r\n                        onDelete={this.onDeleteHandler} \r\n                        onEdit={this.onEditHandler}\r\n                        onStatusChange={this.onStatusChangeHandler}\r\n                        />\r\n                    :\r\n                    <EmptyTableBody />}\r\n                </table>\r\n    }\r\n                <ToastContainer autoClose={1500} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead className=\"table-dark\">\r\n            <tr>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Descrição</th>\r\n                <th scope=\"col\">Data</th>\r\n                <th scope=\"col\">Ações</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    return (\r\n        <tbody>\r\n            {props.tasks.map(task =>\r\n                <tr key={task.id}>\r\n                    <td><input \r\n                        type=\"checkbox\" \r\n                        checked={task.done} \r\n                        onChange={() => props.onStatusChange(task)}\r\n                        /> </td>\r\n                    <td>{ task.done ? <s> {task.description} </s> : task.description }</td>\r\n                    <td>{ task.done ? <s> <Moment format=\"DD/MM/YYYY\">{task.whenToDo}</Moment> </s> \r\n                    :  <Moment format=\"DD/MM/YYYY\">{task.whenToDo}</Moment> }\r\n                    </td>\r\n                    <td>\r\n                        <input \r\n                        className=\"btn btn-primary\" \r\n                        type=\"button\" \r\n                        value=\"Editar\"\r\n                        onClick={() => props.onEdit(task.id)} />\r\n                        &nbsp;<input\r\n                            className=\"btn btn-danger\"\r\n                            type=\"button\"\r\n                            value=\"Excluir\"\r\n                            onClick={() => props.onDelete(task.id)} />\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </tbody>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst EmptyTableBody = (props) => {\r\n    return (\r\n\r\n    <tbody>\r\n        <tr>\r\n           <td colSpan=\"4\">Sem tarefas cadastradas no momento!</td> \r\n        </tr>\r\n\r\n    </tbody>)\r\n}\r\n\r\nexport default TaskListTable;"]},"metadata":{},"sourceType":"module"}