{"ast":null,"code":"import _classCallCheck from\"C:/Users/leand/Documents/workspace/loop-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/leand/Documents/workspace/loop-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from\"axios\";import{AUTH_ENDPOINT,JWT_TOKEN_NAME}from\"../constants\";var AuthService=/*#__PURE__*/function(){function AuthService(){_classCallCheck(this,AuthService);}_createClass(AuthService,[{key:\"login\",value:function login(username,password,onLogin){axios.post(\"\".concat(AUTH_ENDPOINT,\"/login\"),{username:username,password:password}).then(function(response){var jwtToken=response.headers['authorization'].replace(\"Bearer \",\"\");sessionStorage.setItem(JWT_TOKEN_NAME,jwtToken);onLogin(true);}).catch(function(error){console.error(error);onLogin(false);});}},{key:\"getJWTToken\",value:function getJWTToken(){return sessionStorage.getItem(JWT_TOKEN_NAME);}},{key:\"isAuthenticated\",value:function isAuthenticated(){return this.getJWTToken()!=null;}},{key:\"logout\",value:function logout(){sessionStorage.removeItem(JWT_TOKEN_NAME);}},{key:\"getJWTTokenData\",value:function getJWTTokenData(){var jwtToken=this.getJWTToken();if(jwtToken==null){return null;}var jwtTokenData=atob(jwtToken.split(\".\")[1]);return JSON.parse(jwtTokenData);}}]);return AuthService;}();export default new AuthService();","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/loop-frontend/src/api/AuthService.js"],"names":["axios","AUTH_ENDPOINT","JWT_TOKEN_NAME","AuthService","username","password","onLogin","post","then","response","jwtToken","headers","replace","sessionStorage","setItem","catch","error","console","getItem","getJWTToken","removeItem","jwtTokenData","atob","split","JSON","parse"],"mappings":"4UAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,aAAR,CAAuBC,cAAvB,KAA4C,cAA5C,C,GAEMC,CAAAA,W,+IAEIC,Q,CAAUC,Q,CAAUC,O,CAAS,CAC/BN,KAAK,CACJO,IADD,WACSN,aADT,WACgC,CAAEG,QAAQ,CAAGA,QAAb,CAAuBC,QAAQ,CAAGA,QAAlC,CADhC,EAECG,IAFD,CAEM,SAAAC,QAAQ,CAAI,CACd,GAAMC,CAAAA,QAAQ,CAAGD,QAAQ,CAACE,OAAT,CAAiB,eAAjB,EAAkCC,OAAlC,CAA0C,SAA1C,CAAqD,EAArD,CAAjB,CACAC,cAAc,CAACC,OAAf,CAAuBZ,cAAvB,CAAuCQ,QAAvC,EACAJ,OAAO,CAAC,IAAD,CAAP,CAGH,CARD,EAQGS,KARH,CAQS,SAAAC,KAAK,CAAI,CACdC,OAAO,CAACD,KAAR,CAAcA,KAAd,EACAV,OAAO,CAAC,KAAD,CAAP,CAEH,CAZD,EAeH,C,iDAGa,CACV,MAAOO,CAAAA,cAAc,CAACK,OAAf,CAAuBhB,cAAvB,CAAP,CACH,C,yDAEiB,CACd,MAAO,MAAKiB,WAAL,IAAsB,IAA7B,CACH,C,uCAEQ,CACLN,cAAc,CAACO,UAAf,CAA0BlB,cAA1B,EACH,C,yDAEiB,CACd,GAAMQ,CAAAA,QAAQ,CAAG,KAAKS,WAAL,EAAjB,CACA,GAAIT,QAAQ,EAAI,IAAhB,CAAsB,CAClB,MAAO,KAAP,CACH,CAED,GAAMW,CAAAA,YAAY,CAAGC,IAAI,CAACZ,QAAQ,CAACa,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAD,CAAzB,CACA,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAP,CAEH,C,2BAIL,cAAe,IAAIlB,CAAAA,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\nimport {AUTH_ENDPOINT, JWT_TOKEN_NAME} from \"../constants\";\r\n\r\nclass AuthService {\r\n\r\n    login(username, password, onLogin) {\r\n        axios\r\n        .post(`${AUTH_ENDPOINT}/login`, { username : username, password : password })\r\n        .then(response => {\r\n            const jwtToken = response.headers['authorization'].replace(\"Bearer \", \"\");\r\n            sessionStorage.setItem(JWT_TOKEN_NAME, jwtToken);\r\n            onLogin(true);\r\n\r\n\r\n        }).catch(error => {\r\n            console.error(error);\r\n            onLogin(false);\r\n\r\n        });\r\n        \r\n\r\n    }\r\n\r\n\r\n    getJWTToken() {\r\n        return sessionStorage.getItem(JWT_TOKEN_NAME);\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return this.getJWTToken() != null;\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(JWT_TOKEN_NAME);\r\n    }\r\n\r\n    getJWTTokenData() {\r\n        const jwtToken = this.getJWTToken();\r\n        if (jwtToken == null) {\r\n            return null;\r\n        }\r\n\r\n        const jwtTokenData = atob(jwtToken.split(\".\")[1])\r\n        return JSON.parse(jwtTokenData); \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}