{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Documents\\\\workspace\\\\looptasks-frontend\\\\src\\\\components\\\\TaskListTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Redirect } from 'react-router-dom';\nimport Alert from './Alert';\nimport Spinner from './Spinner';\nimport Moment from 'react-moment';\nimport { useTasks } from '../hooks/useTasks';\nimport { AuthContext } from '../hooks/useAuth';\n\nconst TaskListTable = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const tasks = useTasks();\n  useEffect(() => {\n    if (auth.credentials.username !== null) {\n      tasks.list();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [auth.credentials]);\n\n  const onDeleteHandler = taskToDelete => {\n    if (window.confirm(\"Deseja mesmo excluir essa tarefa?\")) {\n      tasks.remove(taskToDelete);\n    }\n  };\n\n  const onStatusChangeHandler = taskToUpdate => {\n    taskToUpdate.done = !taskToUpdate;\n    tasks.save(taskToUpdate);\n  };\n\n  useEffect(() => {\n    if (tasks.taskRemoved !== null) {\n      toast.success(`Tarefa ${tasks.taskRemoved.id} excluída`, {\n        position: toast.POSITION.BOTTOM_LEFT\n      });\n      tasks.clearTaskRemoved();\n    }\n\n    if (tasks.taskUpdated !== null) {\n      toast.success(`Tarefa ${tasks.taskUpdated.id} foi marcada como ${!tasks.taskUpdated.done ? \"não\" : \"\"} concluída`, {\n        position: toast.POSITION.BOTTOM_LEFT\n      });\n      tasks.clearTaskUpdated();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [tasks.taskRemoved, tasks.taskUpdated]);\n\n  if (!auth.isAuthenticated()) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), tasks.error && /*#__PURE__*/_jsxDEV(Alert, {\n      message: tasks.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 34\n    }, this), tasks.processing ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"A\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.taskList.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            children: \"Sem tarefas cadastradas no momento!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this) : tasks.taskList.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.done,\n              onChange: () => onStatusChangeHandler(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 31\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.done ? /*#__PURE__*/_jsxDEV(\"s\", {\n              children: [\" \", task.description, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 45\n            }, this) : task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.done ? /*#__PURE__*/_jsxDEV(\"s\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"DD/MM/YYYY\",\n                children: task.whenToDo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 49\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(Moment, {\n              format: \"DD/MM/YYYY\",\n              children: task.whenToDo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn btn-primary\",\n              type: \"button\",\n              value: \"Editar\",\n              onClick: () => false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 31\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn btn-danger\",\n              type: \"button\",\n              value: \"Excluir\",\n              onClick: () => onDeleteHandler(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 27\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 1500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n};\n\n_s(TaskListTable, \"r1f7dXRi6C/rgxGsvkcNO3KKzyQ=\", false, function () {\n  return [useTasks];\n});\n\n_c = TaskListTable;\nexport default TaskListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListTable\");","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/looptasks-frontend/src/components/TaskListTable.js"],"names":["React","useContext","useEffect","toast","ToastContainer","Redirect","Alert","Spinner","Moment","useTasks","AuthContext","TaskListTable","auth","tasks","credentials","username","list","onDeleteHandler","taskToDelete","window","confirm","remove","onStatusChangeHandler","taskToUpdate","done","save","taskRemoved","success","id","position","POSITION","BOTTOM_LEFT","clearTaskRemoved","taskUpdated","clearTaskUpdated","isAuthenticated","error","processing","taskList","length","map","task","description","whenToDo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport Spinner from './Spinner';\r\nimport Moment from 'react-moment';\r\nimport { useTasks } from '../hooks/useTasks';\r\nimport { AuthContext } from '../hooks/useAuth';\r\n\r\nconst TaskListTable = () =>  {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const tasks = useTasks();\r\n\r\n    useEffect(() => {\r\n        if(auth.credentials.username !== null) {\r\n        tasks.list();\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [ auth.credentials ]);\r\n\r\n\r\n        const onDeleteHandler = (taskToDelete) => {\r\n            if (window.confirm(\"Deseja mesmo excluir essa tarefa?\")){\r\n                tasks.remove(taskToDelete);\r\n            } \r\n        \r\n        }\r\n\r\n        const onStatusChangeHandler = (taskToUpdate) => {\r\n            taskToUpdate.done = !taskToUpdate;\r\n            tasks.save(taskToUpdate);\r\n\r\n        }\r\n\r\n        useEffect(() => {\r\n            if(tasks.taskRemoved !== null) {\r\n                toast.success(`Tarefa ${tasks.taskRemoved.id} excluída`, \r\n                { position: toast.POSITION.BOTTOM_LEFT});\r\n            tasks.clearTaskRemoved();\r\n            }\r\n            if(tasks.taskUpdated !== null) {\r\n                toast.success(`Tarefa ${tasks.taskUpdated.id} foi marcada como ${!tasks.taskUpdated.done ? \"não\" : \"\" } concluída`, \r\n                { position: toast.POSITION.BOTTOM_LEFT});\r\n            tasks.clearTaskUpdated();\r\n            }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [tasks.taskRemoved, tasks.taskUpdated])\r\n\r\n\r\n\r\n        if (!auth.isAuthenticated()) {\r\n            return <Redirect to=\"/login\" />;\r\n            \r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>Lista de Tarefas</h1>\r\n                { tasks.error && <Alert message={tasks.error} /> }\r\n                { tasks.processing ? <Spinner/> :\r\n\r\n                <table className=\"table table-striped\">\r\n\r\n                <thead className=\"table-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Status</th>\r\n                        <th scope=\"col\">Descrição</th>\r\n                        <th scope=\"col\">Data</th>\r\n                        <th scope=\"col\">Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                    \r\n            <tbody>                \r\n                { tasks.taskList.length ===  0 ? \r\n                <tr>\r\n                   <td colSpan=\"4\">Sem tarefas cadastradas no momento!</td> \r\n                </tr>\r\n                :\r\n                (    \r\n                    tasks.taskList.map(task =>\r\n                      <tr key={task.id}>\r\n                          <td><input \r\n                              type=\"checkbox\" \r\n                              checked={task.done} \r\n                              onChange={() => onStatusChangeHandler(task)}\r\n                              /> </td>\r\n                          <td>{ task.done ? <s> {task.description} </s> : task.description }</td>\r\n                          <td>{ task.done ? <s> <Moment format=\"DD/MM/YYYY\">{task.whenToDo}</Moment> </s> \r\n                          :  <Moment format=\"DD/MM/YYYY\">{task.whenToDo}</Moment> }\r\n                          </td>\r\n                          <td>\r\n                              <input \r\n                              className=\"btn btn-primary\" \r\n                              type=\"button\" \r\n                              value=\"Editar\"\r\n                              onClick={() => false} />\r\n                              &nbsp;<input\r\n                                  className=\"btn btn-danger\"\r\n                                  type=\"button\"\r\n                                  value=\"Excluir\"\r\n                                  onClick={() => onDeleteHandler(task)} />\r\n                          </td>\r\n                      </tr>\r\n                    )\r\n                 )}\r\n            </tbody>     \r\n                \r\n                </table>\r\n            }\r\n                <ToastContainer autoClose={1500} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default TaskListTable;"]},"metadata":{},"sourceType":"module"}