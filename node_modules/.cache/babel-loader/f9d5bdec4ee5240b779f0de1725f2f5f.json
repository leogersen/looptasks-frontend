{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Documents\\\\workspace\\\\loop-frontend\\\\src\\\\components\\\\NavBar.js\";\nimport React, { Component } from 'react';\nimport AuthService from '../api/AuthService';\nimport { APP_NAME } from '../constants';\nimport NavBarItem from './NavBarItem';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [{\n        name: \"Listar Tarefas\",\n        href: \"/\",\n        active: false\n      }, {\n        name: \"Nova Tarefa\",\n        href: \"/form\",\n        active: false\n      }]\n    };\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onLogoutHandler = this.onLogoutHandler.bind(this);\n  }\n\n  onClickHandler(itemClicked) {\n    const items = [...this.state.items];\n    items.forEach(item => {\n      if (item.name === itemClicked.name) {\n        item.active = true;\n      } else {\n        item.active = false;\n      }\n\n      this.setState({\n        items\n      });\n    });\n  }\n\n  onLogoutHandler() {\n    AuthService.logout();\n    this.props.onLinkClick();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        children: APP_NAME\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarText\",\n        \"aria-controls\": \"navbarText\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-toggler-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarText\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav mr-auto\",\n          children: [this.state.items.map(i => /*#__PURE__*/_jsxDEV(NavBarItem, {\n            item: i,\n            onClick: this.onClickHandler\n          }, i.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 34\n          }, this)), AuthService.isAuthenticated() ? /*#__PURE__*/_jsxDEV(NavBarItem, {\n            item: {\n              name: \"Logout\",\n              active: false,\n              href: \"#\"\n            },\n            onClick: this.onLogoutHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 31\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navbar-text\",\n        children: AuthService.isAuthenticated() ? `Olá, ${AuthService.getJWTTokenData().displayName}!` : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this);\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/loop-frontend/src/components/NavBar.js"],"names":["React","Component","AuthService","APP_NAME","NavBarItem","NavBar","constructor","props","state","items","name","href","active","onClickHandler","bind","onLogoutHandler","itemClicked","forEach","item","setState","logout","onLinkClick","render","map","i","isAuthenticated","getJWTTokenData","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AuthService from '../api/AuthService';\r\nimport { APP_NAME } from '../constants';\r\nimport NavBarItem from './NavBarItem';\r\n\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            items: [\r\n                { name: \"Listar Tarefas\", href: \"/\", active: false },\r\n                { name: \"Nova Tarefa\", href: \"/form\", active: false },\r\n            ]\r\n        }\r\n\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n        this.onLogoutHandler = this.onLogoutHandler.bind(this);\r\n\r\n    }\r\n    onClickHandler(itemClicked) {\r\n        const items = [...this.state.items];\r\n\r\n        items.forEach(item => {\r\n            if (item.name === itemClicked.name) {\r\n                item.active = true;\r\n            } else {\r\n                item.active = false;\r\n            }\r\n\r\n            this.setState({ items });\r\n\r\n\r\n        })  }\r\n\r\n\r\n        onLogoutHandler() {\r\n            AuthService.logout();\r\n            this.props.onLinkClick();\r\n        }\r\n\r\n\r\n\r\n  \r\n\r\n    render() {\r\n        return (\r\n                        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <a className=\"navbar-brand\" href=\"/\">{APP_NAME}</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                            {this.state.items.map(\r\n\r\n                            i => <NavBarItem\r\n                                key={i.name}\r\n                                item={i}\r\n                                onClick={this.onClickHandler} />)}\r\n                            {AuthService.isAuthenticated() \r\n                            ? <NavBarItem item={{name: \"Logout\", active: false, href: \"#\"}}\r\n                                onClick={this.onLogoutHandler} />   \r\n                            : \"\"}\r\n                            </ul>\r\n            \r\n                        </div>\r\n\r\n                        <span className=\"navbar-text\">\r\n                            {AuthService.isAuthenticated() ? \r\n                            `Olá, ${AuthService.getJWTTokenData().displayName}!` : \"\" }\r\n                            </span>\r\n\r\n                    </nav>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}