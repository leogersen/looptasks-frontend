{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Documents\\\\workspace\\\\loop-frontend\\\\src\\\\components\\\\TaskForm.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AuthService from '../api/AuthService';\nimport TaskService from '../api/TaskService';\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: {\n        id: 0,\n        description: \"\",\n        whenToDo: \"\"\n      },\n      redirect: false,\n      buttomName: \"Cadastrar\"\n    };\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const editId = this.props.match.params.id;\n\n    if (editId) {\n      TaskService.load(~~editId, task => this.setState({\n        task: task\n      }), error => {});\n      const task = TaskService.load(~~editId);\n      this.setState({\n        task: task,\n        buttomName: \"Alterar\"\n      });\n    }\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault();\n    TaskService.save(this.state.task);\n    this.setState({\n      redirect: true\n    });\n  }\n\n  onInputChangeHandler(event) {\n    const field = event.target.name;\n    const value = event.target.value;\n    this.setState(prevState => ({\n      task: { ...prevState.task,\n        [field]: value\n      }\n    }));\n    console.log(this.state.task);\n  }\n\n  render() {\n    if (!AuthService.isAuthenticated()) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastro da Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"description\",\n            value: this.state.task.description,\n            placeholder: \"Digite a descri\\xE7\\xE3o\",\n            onChange: this.onInputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"whenToDo\",\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            name: \"whenToDo\",\n            value: this.state.task.whenToDo,\n            placeholder: \"Informe a data\",\n            onChange: this.onInputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: this.state.buttomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => this.setState({\n            redirect: true\n          }),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/loop-frontend/src/components/TaskForm.js"],"names":["React","Component","Redirect","AuthService","TaskService","TaskForm","constructor","props","state","task","id","description","whenToDo","redirect","buttomName","onSubmitHandler","bind","onInputChangeHandler","componentDidMount","editId","match","params","load","setState","error","event","preventDefault","save","field","target","name","value","prevState","console","log","render","isAuthenticated"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAE,CADF;AAEFC,QAAAA,WAAW,EAAE,EAFX;AAGFC,QAAAA,QAAQ,EAAE;AAHR,OADG;AAMTC,MAAAA,QAAQ,EAAE,KAND;AAOTC,MAAAA,UAAU,EAAE;AAPH,KAAb;AAWA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,MAAM,GAAG,KAAKZ,KAAL,CAAWa,KAAX,CAAiBC,MAAjB,CAAwBX,EAAvC;;AACA,QAAIS,MAAJ,EAAY;AAERf,MAAAA,WAAW,CAACkB,IAAZ,CAAiB,CAAC,CAACH,MAAnB,EACIV,IAAI,IAAI,KAAKc,QAAL,CAAc;AAAEd,QAAAA,IAAI,EAAEA;AAAR,OAAd,CADZ,EAEIe,KAAK,IAAI,CAER,CAJL;AAMD,YAAMf,IAAI,GAAEL,WAAW,CAACkB,IAAZ,CAAiB,CAAC,CAACH,MAAnB,CAAZ;AACH,WAAKI,QAAL,CAAc;AAAEd,QAAAA,IAAI,EAAEA,IAAR;AAAcK,QAAAA,UAAU,EAAE;AAA1B,OAAd;AACC;AACJ;;AAEDC,EAAAA,eAAe,CAACU,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACC,cAAN;AACAtB,IAAAA,WAAW,CAACuB,IAAZ,CAAiB,KAAKnB,KAAL,CAAWC,IAA5B;AACA,SAAKc,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAEH;;AAEDI,EAAAA,oBAAoB,CAACQ,KAAD,EAAQ;AACxB,UAAMG,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAaC,IAA3B;AACA,UAAMC,KAAK,GAAGN,KAAK,CAACI,MAAN,CAAaE,KAA3B;AACA,SAAKR,QAAL,CAAcS,SAAS,KAAM;AAAEvB,MAAAA,IAAI,EAAE,EAAE,GAAGuB,SAAS,CAACvB,IAAf;AAAqB,SAACmB,KAAD,GAASG;AAA9B;AAAR,KAAN,CAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWC,IAAvB;AACH;;AAED0B,EAAAA,MAAM,GAAG;AAEL,QAAI,CAAChC,WAAW,CAACiC,eAAZ,EAAL,EAAoC;AAChC,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH;;AAED,QAAI,KAAK5B,KAAL,CAAWK,QAAf,EAAyB;AACrB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKE,eAArB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AACQ,YAAA,SAAS,EAAC,cADlB;AAEQ,YAAA,IAAI,EAAC,aAFb;AAGQ,YAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,IAAX,CAAgBE,WAH/B;AAIQ,YAAA,WAAW,EAAC,0BAJpB;AAKQ,YAAA,QAAQ,EAAE,KAAKM;AALvB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AACQ,YAAA,SAAS,EAAC,cADlB;AAEQ,YAAA,IAAI,EAAC,UAFb;AAGQ,YAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,IAAX,CAAgBG,QAH/B;AAIQ,YAAA,WAAW,EAAC,gBAJpB;AAKQ,YAAA,QAAQ,EAAE,KAAKK;AALvB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAoBI;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAqBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAA,oBAAmD,KAAKT,KAAL,CAAWM;AAA9D;AAAA;AAAA;AAAA;AAAA,gBArBJ,2BAuBI;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,SAAS,EAAC,iBAFV;AAGA,UAAA,OAAO,EAAE,MAAM,KAAKS,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAE;AAAZ,WAAd,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCH;;AA/F4B;;AAkGjC,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AuthService from '../api/AuthService';\r\nimport TaskService from '../api/TaskService';\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            task: {\r\n                id: 0,\r\n                description: \"\",\r\n                whenToDo: \"\"\r\n            },\r\n            redirect: false,\r\n            buttomName: \"Cadastrar\"\r\n\r\n        }\r\n                \r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const editId = this.props.match.params.id;\r\n        if (editId) {\r\n\r\n            TaskService.load(~~editId,\r\n                task => this.setState({ task: task }),\r\n                error => {\r\n                    \r\n                })\r\n\r\n           const task =TaskService.load(~~editId);\r\n        this.setState({ task: task, buttomName: \"Alterar\" });\r\n        }\r\n    }\r\n\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        TaskService.save(this.state.task);\r\n        this.setState({ redirect: true });\r\n\r\n    }\r\n\r\n    onInputChangeHandler(event) {\r\n        const field = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState(prevState =>  ({ task: { ...prevState.task, [field]: value }}));\r\n        console.log(this.state.task);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!AuthService.isAuthenticated()) {\r\n            return <Redirect to=\"/login\" />;\r\n            \r\n        }\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Cadastro da Tarefa</h1>\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"description\">Descrição</label>\r\n                        <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"description\"\r\n                                value={this.state.task.description}\r\n                                placeholder=\"Digite a descrição\"\r\n                                onChange={this.onInputChangeHandler} />\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"whenToDo\">Data</label>\r\n                        <input type=\"date\"\r\n                                className=\"form-control\"\r\n                                name=\"whenToDo\"\r\n                                value={this.state.task.whenToDo}\r\n                                placeholder=\"Informe a data\" \r\n                                onChange={this.onInputChangeHandler} />\r\n                    </div>\r\n                    <br/>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">{this.state.buttomName}</button>\r\n                    &nbsp;&nbsp;\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => this.setState({ redirect: true })}>\r\n                    Cancelar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;"]},"metadata":{},"sourceType":"module"}