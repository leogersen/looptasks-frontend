{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\leand\\\\Documents\\\\workspace\\\\loop-frontend\\\\src\\\\components\\\\TaskForm.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AuthService from '../api/AuthService';\nimport TaskService from '../api/TaskService';\nimport Spinner from './Spinner';\nimport Alert from './Alert';\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: {\n        id: 0,\n        description: \"\",\n        whenToDo: \"\"\n      },\n      redirect: false,\n      buttomName: \"Cadastrar\",\n      alert: null,\n      loading: false,\n      saving: false\n    };\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const editId = this.props.match.params.id;\n\n    if (editId) {\n      this.setState({\n        loading: true\n      });\n      TaskService.load(~~editId, task => this.setState({\n        task: task,\n        loading: false,\n        buttomName: \"Alterar\"\n      }), error => {\n        if (error.response) {\n          if (error.response.status === 404) {\n            this.setErrorState(\"Tarefa não encontrada\");\n          } else {\n            this.setErrorState(`Erro ao carregar dados: ${error.response}`);\n          }\n        } else {\n          this.setErrorState(`Erro na requisição: ${error.message}`);\n        }\n      });\n    }\n  }\n\n  setErrorState(error) {\n    this.setState({\n      alert: error,\n      loading: false,\n      saving: false\n    });\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault();\n    this.setState({\n      saving: true\n    });\n    TaskService.save(this.state.task, () => this.setState({\n      redirect: true,\n      saving: false\n    }), error => {\n      if (error.response) {\n        this.setErrorState(`Erro: ${error.response.data.error}`);\n      } else {\n        this.setErrorState(`Erro na requisição: ${error.message}`);\n      }\n    });\n  }\n\n  onInputChangeHandler(event) {\n    const field = event.target.name;\n    const value = event.target.value;\n    this.setState(prevState => ({\n      task: { ...prevState.task,\n        [field]: value\n      }\n    }));\n    console.log(this.state.task);\n  }\n\n  render() {\n    if (!AuthService.isAuthenticated()) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastro da Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), this.state.alert != null ? /*#__PURE__*/_jsxDEV(Alert, {\n        message: this.state.alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"description\",\n            value: this.state.task.description,\n            placeholder: \"Digite a descri\\xE7\\xE3o\",\n            onChange: this.onInputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"whenToDo\",\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control\",\n            name: \"whenToDo\",\n            value: this.state.task.whenToDo,\n            placeholder: \"Informe a data\",\n            onChange: this.onInputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: this.state.saving,\n          children: this.state.saving ? /*#__PURE__*/_jsxDEV(\"span\", {\n            ClassName: \"spinner-border spinner-border-sm\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this) : this.state.buttomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => this.setState({\n            redirect: true\n          }),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TaskForm;","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/loop-frontend/src/components/TaskForm.js"],"names":["React","Component","Redirect","AuthService","TaskService","Spinner","Alert","TaskForm","constructor","props","state","task","id","description","whenToDo","redirect","buttomName","alert","loading","saving","onSubmitHandler","bind","onInputChangeHandler","componentDidMount","editId","match","params","setState","load","error","response","status","setErrorState","message","event","preventDefault","save","data","field","target","name","value","prevState","console","log","render","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AuthService from '../api/AuthService';\r\nimport TaskService from '../api/TaskService';\r\nimport Spinner from './Spinner';\r\nimport Alert from './Alert';\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            task: {\r\n                id: 0,\r\n                description: \"\",\r\n                whenToDo: \"\"\r\n            },\r\n            redirect: false,\r\n            buttomName: \"Cadastrar\",\r\n            alert: null,\r\n            loading: false,\r\n            saving: false\r\n\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const editId = this.props.match.params.id;\r\n        if (editId) {\r\n            this.setState({ loading: true });\r\n            TaskService.load(~~editId,\r\n                task => this.setState({ task: task, loading: false, buttomName: \"Alterar\" }),\r\n                error => {\r\n                    if (error.response) {\r\n                        if (error.response.status === 404) {\r\n                            this.setErrorState(\"Tarefa não encontrada\");\r\n                        } else {\r\n                            this.setErrorState(`Erro ao carregar dados: ${error.response}`);\r\n                        }\r\n\r\n                    } else {\r\n                        this.setErrorState(`Erro na requisição: ${error.message}`);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    setErrorState(error) {\r\n        this.setState({ alert: error, loading: false, saving: false })\r\n    }\r\n\r\n\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({ saving: true });\r\n        TaskService.save(this.state.task,\r\n            () => this.setState({ redirect: true, saving: false }),\r\n            error => {\r\n                if (error.response) {\r\n                    this.setErrorState(`Erro: ${error.response.data.error}`);\r\n                } else {\r\n                    this.setErrorState(`Erro na requisição: ${error.message}`);\r\n                }\r\n\r\n            })\r\n\r\n\r\n    }\r\n\r\n    onInputChangeHandler(event) {\r\n        const field = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState(prevState => ({ task: { ...prevState.task, [field]: value } }));\r\n        console.log(this.state.task);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!AuthService.isAuthenticated()) {\r\n            return <Redirect to=\"/login\" />;\r\n\r\n        }\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        if (this.state.loading) {\r\n            return <Spinner />;\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Cadastro da Tarefa</h1>\r\n                {this.state.alert != null ? <Alert message={this.state.alert} /> : \"\"}\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"description\">Descrição</label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"description\"\r\n                            value={this.state.task.description}\r\n                            placeholder=\"Digite a descrição\"\r\n                            onChange={this.onInputChangeHandler} />\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"whenToDo\">Data</label>\r\n                        <input type=\"date\"\r\n                            className=\"form-control\"\r\n                            name=\"whenToDo\"\r\n                            value={this.state.task.whenToDo}\r\n                            placeholder=\"Informe a data\"\r\n                            onChange={this.onInputChangeHandler} />\r\n                    </div>\r\n                    <br />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={this.state.saving}>\r\n                        {\r\n                            this.state.saving ?\r\n                                <span ClassName=\"spinner-border spinner-border-sm\"\r\n                                    role=\"status\" aria-hidden=\"true\">\r\n                                </span>\r\n\r\n                            : this.state.buttomName\r\n                            \r\n                        }\r\n\r\n                        \r\n\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.setState({ redirect: true })}>\r\n                        Cancelar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;"]},"metadata":{},"sourceType":"module"}