{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { API_ENDPOINT } from \"../constants\";\nimport { AuthContext } from \"./useAuth\";\nexport const useTasks = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [taskList, setTaskList] = useState([]);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(false);\n\n  const list = async () => {\n    try {\n      setProcessing(true);\n      setError(null);\n      const response = await axios.get(`${API_ENDPOINT}/tasks?sort=whenToDo,asc`, buildAuthHeader());\n      setTaskList(response.data.content);\n      setProcessing(false);\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n      setProcessing(false);\n    }\n  };\n\n  const buildAuthHeader = () => {\n    return {\n      headers: {\n        \"authorization\": `Bearer ${auth.credentials.token}`\n      }\n    };\n  };\n\n  return {\n    taskList,\n    error,\n    processing,\n    list\n  };\n};\n\n_s(useTasks, \"dwIevxMAgvSON4qPJ+oyAh27B8M=\");","map":{"version":3,"sources":["C:/Users/leand/Documents/workspace/looptasks-frontend/src/hooks/useTasks.js"],"names":["axios","useContext","useState","API_ENDPOINT","AuthContext","useTasks","auth","taskList","setTaskList","error","setError","processing","setProcessing","list","response","get","buildAuthHeader","data","content","console","log","message","headers","credentials","token"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAMC,IAAI,GAAGL,UAAU,CAACG,WAAD,CAAvB;AACA,QAAM,CAAEG,QAAF,EAAYC,WAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEO,KAAF,EAASC,QAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAES,UAAF,EAAcC,aAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;;AAGA,QAAMW,IAAI,GAAG,YAAY;AAErB,QAAI;AACJD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,YAAMI,QAAQ,GAAG,MAAMd,KAAK,CAC1Be,GADqB,CAChB,GAAEZ,YAAa,0BADC,EAC0Ba,eAAe,EADzC,CAAvB;AAECR,MAAAA,WAAW,CAACM,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAX;AACAN,MAAAA,aAAa,CAAC,KAAD,CAAb;AAEC,KARD,CAQE,OAAOH,KAAP,EAAc;AACZU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAC,MAAAA,QAAQ,CAACD,KAAK,CAACY,OAAP,CAAR;AACAT,MAAAA,aAAa,CAAC,KAAD,CAAb;AAEE;AACL,GAhBL;;AAkBA,QAAMI,eAAe,GAAG,MAAM;AAC1B,WAAO;AACHM,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAAShB,IAAI,CAACiB,WAAL,CAAiBC,KAAM;AAD7C;AADN,KAAP;AAKH,GAND;;AAQA,SAAO;AAAEjB,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBE,IAAAA,UAAnB;AAA+BE,IAAAA;AAA/B,GAAP;AAEH,CAnCM;;GAAMR,Q","sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { API_ENDPOINT } from \"../constants\";\r\nimport { AuthContext } from \"./useAuth\";\r\n\r\nexport const useTasks = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [ taskList, setTaskList ] = useState([]);\r\n    const [ error, setError ] = useState(null);\r\n    const [ processing, setProcessing ] = useState(false);\r\n\r\n\r\n    const list = async () => {\r\n\r\n        try {\r\n        setProcessing(true);\r\n        setError(null);\r\n       const response = await axios\r\n        .get(`${API_ENDPOINT}/tasks?sort=whenToDo,asc`, buildAuthHeader());\r\n        setTaskList(response.data.content);\r\n        setProcessing(false);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error.message);\r\n            setProcessing(false);\r\n\r\n             }\r\n        }\r\n    \r\n    const buildAuthHeader = () => {\r\n        return {\r\n            headers: {\r\n                \"authorization\": `Bearer ${auth.credentials.token}`\r\n            }\r\n        }\r\n    }\r\n\r\n    return { taskList, error, processing, list} ;\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}