{"version":3,"sources":["constants.js","api/AuthService.js","components/Alert.js","components/Login.js","components/NavBarItem.js","components/NavBar.js","api/TaskService.js","components/Spinner.js","components/TaskForm.js","components/TaskListTable.js","App.js","index.js"],"names":["SERVER","process","AUTH_ENDPOINT","API_ENDPOINT","JWT_TOKEN_NAME","username","password","onLogin","axios","post","then","response","jwtToken","headers","replace","sessionStorage","setItem","catch","error","console","getItem","this","getJWTToken","removeItem","jwtTokenData","atob","split","JSON","parse","Alert","props","className","role","message","Login","state","alert","processing","loggedIn","handleSubmit","bind","handleInputChanged","handleLoginReponse","event","preventDefault","setState","AuthService","login","success","onLoginSuccess","field","target","name","value","isAuthenticated","to","onSubmit","htmlFor","type","onChange","placeholder","disabled","Component","NavBarItem","item","active","href","onClick","e","NavBar","items","onClickHandler","onLogoutHandler","itemClicked","forEach","logout","onLinkClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","map","i","getJWTTokenData","displayName","onFetch","onError","get","buildAuthHeader","data","content","onLoad","onDelete","delete","task","onSave","put","Spinner","TaskForm","description","whenToDo","redirect","buttomName","loading","saving","onSubmitHandler","onInputChangeHandler","editId","match","params","TaskService","load","status","setErrorState","save","prevState","log","aria-hidden","TaskListTable","tasks","onDeleteHandler","onStatusChangeHandler","onEditHandler","listTasks","list","window","confirm","toast","position","POSITION","BOTTOM_LEFT","done","t","length","onEdit","onStatusChange","autoClose","TableHeader","scope","TableBody","checked","format","EmptyTableBody","colSpan","App","onRefreshHandler","forceUpdate","style","marginTop","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f5a1166d.chunk.js","sourcesContent":["const SERVER = process.env.REACT_APP_SERVER;\r\n\r\nexport const APP_NAME = \"LoopTasks\";\r\nexport const AUTH_ENDPOINT = `${SERVER}`\r\nexport const API_ENDPOINT = `${SERVER}/api`\r\nexport const JWT_TOKEN_NAME = \"jwt\";","import axios from \"axios\";\r\nimport {AUTH_ENDPOINT, JWT_TOKEN_NAME} from \"../constants\";\r\n\r\nclass AuthService {\r\n\r\n    login(username, password, onLogin) {\r\n        axios\r\n        .post(`${AUTH_ENDPOINT}/login`, { username : username, password : password })\r\n        .then(response => {\r\n            const jwtToken = response.headers['authorization'].replace(\"Bearer \", \"\");\r\n            sessionStorage.setItem(JWT_TOKEN_NAME, jwtToken);\r\n            onLogin(true);\r\n\r\n\r\n        }).catch(error => {\r\n            console.error(error);\r\n            onLogin(false);\r\n\r\n        });\r\n        \r\n\r\n    }\r\n\r\n\r\n    getJWTToken() {\r\n        return sessionStorage.getItem(JWT_TOKEN_NAME);\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return this.getJWTToken() != null;\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(JWT_TOKEN_NAME);\r\n    }\r\n\r\n    getJWTTokenData() {\r\n        const jwtToken = this.getJWTToken();\r\n        if (jwtToken == null) {\r\n            return null;\r\n        }\r\n\r\n        const jwtTokenData = atob(jwtToken.split(\".\")[1])\r\n        return JSON.parse(jwtTokenData); \r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService();","import React from 'react'\r\n\r\nconst Alert = (props) =>\r\n    <div className=\"alert alert-danger\" role=\"alert\">\r\n        {props.message}\r\n    </div>\r\n\r\n    export default Alert;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AuthService from '../api/AuthService';\r\nimport Alert from './Alert';\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            alert: null,\r\n            processing: false,\r\n            loggedIn: false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChanged = this.handleInputChanged.bind(this);\r\n        this.handleLoginReponse = this.handleLoginReponse.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({processing: true});\r\n        AuthService.login(this.state.username, this.state.password, this.handleLoginReponse);\r\n        \r\n    }\r\n\r\n    handleLoginReponse(success) {\r\n        if (success) {\r\n            this.setState({ loggedIn: true, processing: false });\r\n            this.props.onLoginSuccess();    \r\n        }else {\r\n            this.setState({alert: \"O login não pode ser realizado\", processing: false });\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChanged(event){\r\n        const field = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [field]: value });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        if (AuthService.isAuthenticated() || this.state.loggedIn) {\r\n            return <Redirect to=\"/\" />;\r\n            \r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1> Login </h1>\r\n                {this.state.alert !== null ? <Alert message={this.state.alert} /> : \"\"}\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Usuário</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            onChange={this.handleInputChanged}\r\n                            value={this.state.username}\r\n                            name=\"username\"\r\n                            placeholder=\"Digite o usuário\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Senha</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            onChange={this.handleInputChanged}\r\n                            value={this.state.password}\r\n                            name=\"password\"\r\n                            placeholder=\"Digite a senha\"\r\n                            />\r\n\r\n                    </div>\r\n                    <br/>\r\n                    <button\r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\"\r\n                    disabled={this.state.processing}>\r\n                    Login</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavBarItem extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link \r\n                className={`nav-item nav-link ${this.props.item.active ? \"active\" : \"\"}`}\r\n\r\n                to={this.props.item.href} \r\n                onClick={e => this.props.onClick(this.props.item)}>\r\n                    {this.props.item.name}\r\n                 </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBarItem;","import React, { Component } from 'react';\r\nimport AuthService from '../api/AuthService';\r\nimport { APP_NAME } from '../constants';\r\nimport NavBarItem from './NavBarItem';\r\n\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            items: [\r\n                { name: \"Listar Tarefas\", href: \"/\", active: false },\r\n                { name: \"Nova Tarefa\", href: \"/form\", active: false },\r\n            ]\r\n        }\r\n\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n        this.onLogoutHandler = this.onLogoutHandler.bind(this);\r\n\r\n    }\r\n    onClickHandler(itemClicked) {\r\n        const items = [...this.state.items];\r\n\r\n        items.forEach(item => {\r\n            if (item.name === itemClicked.name) {\r\n                item.active = true;\r\n            } else {\r\n                item.active = false;\r\n            }\r\n\r\n            this.setState({ items });\r\n\r\n\r\n        })  }\r\n\r\n\r\n        onLogoutHandler() {\r\n            AuthService.logout();\r\n            this.props.onLinkClick();\r\n        }\r\n\r\n\r\n\r\n  \r\n\r\n    render() {\r\n        return (\r\n                 <div>\r\n                        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                        <a className=\"navbar-brand\" href=\"/\">{APP_NAME}</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                            {this.state.items.map(\r\n\r\n                            i => <NavBarItem\r\n                                key={i.name}\r\n                                item={i}\r\n                                onClick={this.onClickHandler} />)}\r\n                            {AuthService.isAuthenticated() \r\n                            ? <NavBarItem item={{name: \"Logout\", active: false, href: \"#\"}}\r\n                                onClick={this.onLogoutHandler} />   \r\n                            : \"\"}\r\n                            </ul>\r\n            \r\n                        </div>\r\n\r\n                        <span className=\"navbar-text\">\r\n                            {AuthService.isAuthenticated() ? \r\n                            `Olá, ${AuthService.getJWTTokenData().displayName}!` : \"\" }\r\n                            </span>\r\n                            \r\n                    </nav>  \r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import axios from \"axios\";\r\nimport { API_ENDPOINT } from \"../constants\";\r\nimport AuthService from \"./AuthService\";\r\n\r\nclass TaskService {\r\n\r\n\r\n    list(onFetch, onError) {\r\n        axios\r\n        .get(`${API_ENDPOINT}/tasks?sort=whenToDo,asc`, this.buildAuthHeader())\r\n        .then(response => onFetch(response.data.content))\r\n        .catch(e => onError(e));\r\n\r\n    }\r\n\r\n    load(id, onLoad, onError) {\r\n        axios\r\n        .get(`${API_ENDPOINT}/tasks/${id}`, this.buildAuthHeader())\r\n        .then(response => onLoad(response.data))\r\n        .catch(e => onError(e));\r\n    }\r\n\r\n    delete(id, onDelete, onError) {\r\n        axios\r\n        .delete(`${API_ENDPOINT}/tasks/${id}`, this.buildAuthHeader())\r\n        .then(() => onDelete())\r\n        .catch(e => onError(e));\r\n        \r\n    }\r\n\r\n    save(task, onSave, onError) {\r\n        if (task.id === 0) {\r\n            axios\r\n                .post(`${API_ENDPOINT}/tasks`, task, this.buildAuthHeader())\r\n                .then(() => onSave())\r\n                .catch(e => onError(e));\r\n        }else {\r\n            axios\r\n                .put(`${API_ENDPOINT}/tasks/${task.id}`, task, this.buildAuthHeader())\r\n                .then(() => onSave())\r\n                .catch(e => onError(e));\r\n        }\r\n    }\r\n    \r\n    buildAuthHeader() {\r\n        return {\r\n            headers: {\r\n                \"authorization\": `Bearer ${AuthService.getJWTToken()}`\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nexport default new TaskService();\r\n","import React from 'react';\r\n\r\nconst Spinner = () => \r\n    <div className=\"d-flex justify-content-center\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n        </div>\r\n    </div>\r\n\r\n    export default Spinner;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AuthService from '../api/AuthService';\r\nimport TaskService from '../api/TaskService';\r\nimport Spinner from './Spinner';\r\nimport Alert from './Alert';\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            task: {\r\n                id: 0,\r\n                description: \"\",\r\n                whenToDo: \"\"\r\n            },\r\n            redirect: false,\r\n            buttomName: \"Cadastrar\",\r\n            alert: null,\r\n            loading: false,\r\n            saving: false\r\n\r\n        }\r\n\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n        this.onInputChangeHandler = this.onInputChangeHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const editId = this.props.match.params.id;\r\n        if (editId) {\r\n            this.setState({ loading: true });\r\n            TaskService.load(~~editId,\r\n                task => this.setState({ task: task, loading: false, buttomName: \"Alterar\" }),\r\n                error => {\r\n                    if (error.response) {\r\n                        if (error.response.status === 404) {\r\n                            this.setErrorState(\"Tarefa não encontrada\");\r\n                        } else {\r\n                            this.setErrorState(`Erro ao carregar dados: ${error.response}`);\r\n                        }\r\n\r\n                    } else {\r\n                        this.setErrorState(`Erro na requisição: ${error.message}`);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    setErrorState(error) {\r\n        this.setState({ alert: error, loading: false, saving: false })\r\n    }\r\n\r\n\r\n    onSubmitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({ saving: true, alert: null });\r\n        TaskService.save(this.state.task,\r\n            () => this.setState({ redirect: true, saving: false }),\r\n            error => {\r\n                if (error.response) {\r\n                    this.setErrorState(`Erro: ${error.response.data.error}`);\r\n                } else {\r\n                    this.setErrorState(`Erro na requisição: ${error.message}`);\r\n                }\r\n\r\n            })\r\n\r\n\r\n    }\r\n\r\n    onInputChangeHandler(event) {\r\n        const field = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState(prevState => ({ task: { ...prevState.task, [field]: value } }));\r\n        console.log(this.state.task);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!AuthService.isAuthenticated()) {\r\n            return <Redirect to=\"/login\" />;\r\n\r\n        }\r\n\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n        if (this.state.loading) {\r\n            return <Spinner />;\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Cadastro da Tarefa</h1>\r\n                {this.state.alert != null ? <Alert message={this.state.alert} /> : \"\"}\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"description\">Descrição</label>\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"description\"\r\n                            value={this.state.task.description}\r\n                            placeholder=\"Digite a descrição\"\r\n                            onChange={this.onInputChangeHandler} />\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"whenToDo\">Data</label>\r\n                        <input type=\"date\"\r\n                            className=\"form-control\"\r\n                            name=\"whenToDo\"\r\n                            value={this.state.task.whenToDo}\r\n                            placeholder=\"Informe a data\"\r\n                            onChange={this.onInputChangeHandler} />\r\n                    </div>\r\n                    <br />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        disabled={this.state.saving}>\r\n\r\n                        {\r\n                            this.state.saving ?\r\n                            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n\r\n                                : this.state.buttomName\r\n\r\n                        }\r\n\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.setState({ redirect: true })}>\r\n                        Cancelar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React, { Component } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport TaskService from '../api/TaskService';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Alert from './Alert';\r\nimport AuthService from '../api/AuthService';\r\nimport Spinner from './Spinner';\r\nimport Moment from 'react-moment';\r\n\r\nclass TaskListTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            editId: 0,\r\n            loading: false,\r\n            alert: null\r\n\r\n        }\r\n\r\n        this.onDeleteHandler = this.onDeleteHandler.bind(this);\r\n        this.onStatusChangeHandler = this.onStatusChangeHandler.bind(this);\r\n        this.onEditHandler = this.onEditHandler.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.listTasks();\r\n\r\n    }\r\n\r\n    listTasks() {\r\n        if (!AuthService.isAuthenticated()) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ loading: true });\r\n        TaskService.list(\r\n            tasks => this.setState({tasks : tasks, loading: false}),\r\n            error => this.setErrorState(error)\r\n        );\r\n    }\r\n\r\n    setErrorState(error) {\r\n        this.setState({alert: `Erro na requisição:  ${error.message}`, loading: false})\r\n    }\r\n\r\n    onDeleteHandler(id) {\r\n        if (window.confirm(\"Deseja mesmo excluir essa tarefa?\"))\r\n\r\n        TaskService.delete(id,\r\n            () => {\r\n            this.listTasks();\r\n            toast.success(\"Tarefa excluída!\", { position: toast.POSITION.BOTTOM_LEFT });\r\n            },\r\n            error => this.setErrorState(error));\r\n\r\n     \r\n    }\r\n\r\n    onEditHandler(id) {\r\n        this.setState({ editId: id });\r\n    }\r\n\r\n    onStatusChangeHandler(task) {\r\n            task.done = !task.done;\r\n\r\n            TaskService.save(task,\r\n                \r\n                () => {\r\n                    const tasks = this.state.tasks.map(t => t.id !== task.id ? t : task);\r\n                    this.setState({ tasks: tasks});\r\n\r\n                },\r\n                error => this.setErrorState(error));\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (!AuthService.isAuthenticated()) {\r\n            return <Redirect to=\"/login\" />;\r\n            \r\n        }\r\n\r\n        if (this.state.editId > 0){\r\n            return <Redirect to={`/form/${this.state.editId}`} />\r\n        } \r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>Lista de Tarefas</h1>\r\n                {this.state.alert != null ? <Alert message={this.state.alert} /> : \"\"}\r\n                {this.state.loading ? <Spinner/> :\r\n                <table className=\"table table-striped\">\r\n                    <TableHeader />\r\n                   {this.state.tasks.length > 0 ? <TableBody\r\n                        tasks={this.state.tasks}\r\n                        onDelete={this.onDeleteHandler} \r\n                        onEdit={this.onEditHandler}\r\n                        onStatusChange={this.onStatusChangeHandler}\r\n                        />\r\n                    :\r\n                    <EmptyTableBody />}\r\n                </table>\r\n    }\r\n                <ToastContainer autoClose={1500} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead className=\"table-dark\">\r\n            <tr>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Descrição</th>\r\n                <th scope=\"col\">Data</th>\r\n                <th scope=\"col\">Ações</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    return (\r\n        <tbody>\r\n            {props.tasks.map(task =>\r\n                <tr key={task.id}>\r\n                    <td><input \r\n                        type=\"checkbox\" \r\n                        checked={task.done} \r\n                        onChange={() => props.onStatusChange(task)}\r\n                        /> </td>\r\n                    <td>{ task.done ? <s> {task.description} </s> : task.description }</td>\r\n                    <td>{ task.done ? <s> <Moment format=\"DD/MM/YYYY\">{task.whenToDo}</Moment> </s> \r\n                    :  <Moment format=\"DD/MM/YYYY\">{task.whenToDo}</Moment> }\r\n                    </td>\r\n                    <td>\r\n                        <input \r\n                        className=\"btn btn-primary\" \r\n                        type=\"button\" \r\n                        value=\"Editar\"\r\n                        onClick={() => props.onEdit(task.id)} />\r\n                        &nbsp;<input\r\n                            className=\"btn btn-danger\"\r\n                            type=\"button\"\r\n                            value=\"Excluir\"\r\n                            onClick={() => props.onDelete(task.id)} />\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </tbody>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst EmptyTableBody = (props) => {\r\n    return (\r\n\r\n    <tbody>\r\n        <tr>\r\n           <td colSpan=\"4\">Sem tarefas cadastradas no momento!</td> \r\n        </tr>\r\n\r\n    </tbody>)\r\n}\r\n\r\nexport default TaskListTable;","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport NavBar from \"./components/NavBar\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskListTable from \"./components/TaskListTable\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.onRefreshHandler = this.onRefreshHandler.bind(this);\n  }\n\n  onRefreshHandler() {\n    this.forceUpdate();\n\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <NavBar onLinkClick={this.onRefreshHandler} />\n        <div className=\"container\" style={{marginTop: 20}}>\n        <Switch> \n          <Route exact path=\"/form\" component={TaskForm} />\n          <Route exact path=\"/login\" render={() => <Login onLoginSuccess={this.onRefreshHandler} />} />\n          <Route exact path=\"/form/:id\" component={TaskForm} />\n          <Route path=\"/\" component={TaskListTable} />\n        </Switch>\n        </div>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}